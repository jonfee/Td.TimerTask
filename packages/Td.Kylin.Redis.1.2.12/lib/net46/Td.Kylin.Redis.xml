<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Td.Kylin.Redis</name>
    </assembly>
    <members>
        <member name="T:Td.Kylin.Redis.RedisContext">
            <summary>
            Redis上下文
            </summary>
        </member>
        <member name="P:Td.Kylin.Redis.RedisContext.Multiplexer">
            <summary>
            ConnectionMultiplexer
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisContext.#ctor(StackExchange.Redis.ConfigurationOptions)">
            <summary>
            Redis上下文
            </summary>
            <param name="options"><seealso cref="T:StackExchange.Redis.ConfigurationOptions"/>实例对象</param>
        </member>
        <member name="M:Td.Kylin.Redis.RedisContext.#ctor(System.String)">
            <summary>
            Redis上下文
            </summary>
            <param name="connectionString">Redis连接配置字符串</param>
        </member>
        <member name="P:Td.Kylin.Redis.RedisContext.IsConnected">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:Td.Kylin.Redis.RedisContext.Item(System.Int32)">
            <summary>
            当前Redis上下文中数据库索引器
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisContext.GetDatabase(System.Int32,System.Object)">
            <summary>
            Obtain an interactive connection to a database inside redis
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisContext.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:Td.Kylin.Redis.RedisExtensions">
            <summary>
            Redis扩展
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.Me(System.Object,System.String)">
            <summary>
            获取该方法的调用者方法或属性名
            </summary>
            <param name="current"></param>
            <param name="caller"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.RedisValueFactory``1(StackExchange.Redis.RedisValue[])">
            <summary>
            RedisValue集合转换为指定类型的列表集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.RedisValueFactory``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将泛型集合对象转换为RedisValues[]数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SerializeObject``1(``0)">
            <summary>
             将对象序列为Json格式字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.DeserializeObject``1(StackExchange.Redis.RedisValue)">
            <summary>
            Json字符串反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.StringGet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey)">
            <summary>
            自定义扩展StringGet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.StringGetList``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey)">
            <summary>
            自定义扩展StringGetList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.StringSetList``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.List{``0})">
            <summary>
            自定义扩展StringSetList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="list"></param>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.StringSet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0)">
            <summary>
            自定义扩展StringSet
            </summary>
            <param name="db"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashSet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.Dictionary{StackExchange.Redis.RedisValue,``0},StackExchange.Redis.CommandFlags)">
            <summary>
            存储数据到hash表
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashSetAsync``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,``0,StackExchange.Redis.When,StackExchange.Redis.CommandFlags)">
            <summary>
            异步存储数据到hash表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashField"></param>
            <param name="model"></param>
            <param name="when"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashGetAll``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey)">
            <summary>
            从hash表获取数据
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashGet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue[],System.Boolean)">
            <summary>
            从Hash表中获取指定hashfields字段的数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashFields"></param>
            <param name="removeNullOrEmpty">是否移除空对象</param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashFactory``1(StackExchange.Redis.HashEntry[])">
            <summary>
            HashEntry[]转Dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.HashGet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue)">
            <summary>
            从Hash表中获取指定hashfield字段的数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SetAdd``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            存储数据到Set集合
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SetMembers``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            从Set集合中获取数据
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetAdd``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,System.Double,StackExchange.Redis.CommandFlags)">
            <summary>
            存储数据到SortedSet有序集合
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetAdd``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.Dictionary{``0,System.Double},StackExchange.Redis.CommandFlags)">
            <summary>
            存储数据到SortedSet有序集合
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetRangeByRankWithScores``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Int64,System.Int64,StackExchange.Redis.Order,StackExchange.Redis.CommandFlags)">
            <summary>
            从SortedSet有序集合中获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetRangeByScoreWithScores``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Double,System.Double,StackExchange.Redis.Exclude,StackExchange.Redis.Order,System.Int64,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            从SortedSet有序集合中获取数据
            </summary>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetRangeByValue``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,StackExchange.Redis.RedisValue,StackExchange.Redis.Exclude,System.Int64,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            从SortedSet有序集合中获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetRangeByScore``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Double,System.Double,StackExchange.Redis.Exclude,StackExchange.Redis.Order,System.Int64,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            从SortedSet有序集合中获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetRangeByRank``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Int64,System.Int64,StackExchange.Redis.Order,StackExchange.Redis.CommandFlags)">
            <summary>
            从SortedSet有序集合中获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.SortedSetEntryFactory``1(StackExchange.Redis.SortedSetEntry[])">
            <summary>
            SortedSetEntry集合转换为指定类型的键值集合
            </summary>
            <param name="entries"></param>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListGetByIndex``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            获取列表指定索引位置的数据对象 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListInsertAfter``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            在列表指定的对象后面插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListInsertAfter``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            在列表指定的对象后面插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListInsertBefore``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            在列表指定对象前面插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListInsertBefore``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            在列表指定对象前面插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListLeftPop``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            Removes and returns the first element of the list stored at key.
            </summary>
            <returns>the value of the first element, or nil when key does not exist.</returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListLeftPush``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.IEnumerable{``0},StackExchange.Redis.CommandFlags)">
            <summary>
            Insert all the specified values at the head of the list stored at key.
            If key does not exist, it is created as empty list before performing the push operations.
            Elements are inserted one after the other to the head of the list, from the leftmost element to the rightmost element.
            So for instance the command LPUSH mylist a  b c will result into a list containing c as first element, b as second element and a as third element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListLeftPush``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,StackExchange.Redis.When,StackExchange.Redis.CommandFlags)">
            <summary>
            Insert the specified value at the head of the list stored at key. 
            If key does not exist, it is created as empty list before performing the push operations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRange``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Int64,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            获取列表中指定位置范围内的数据集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRemove``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
            从列表中移除指定数据开始起后面指定数量的数据元素，count=0时，移除后面所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRightPop``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            Removes and returns the last element of the list stored at key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRightPopLeftPush``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRightPush``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.IEnumerable{``0},StackExchange.Redis.CommandFlags)">
            <summary>
            Insert all the specified values at the tail of the list stored at key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListRightPush``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,StackExchange.Redis.When,StackExchange.Redis.CommandFlags)">
            <summary>
            Insert the specified value at the tail of the list stored at key
            If key does not exist, it is created as empty list before performing the push operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Td.Kylin.Redis.RedisExtensions.ListSetByIndex``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Int64,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            Sets the list element at index to value.
            For more information on the index argument,see ListGetByIndex. An error is returned for out of range indexes.
            </summary>
        </member>
    </members>
</doc>
